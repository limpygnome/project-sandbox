high priority:
- need  to assign players an ID, which we can send to other players -> send table of info at start / when players join
- secure/lockdown reading data from client sockets -> we do no validation / checking length isnt out of bounds etc
-- player info updates -> consider making update packets generic, foreach stuff or something
-- create: player id | player name | current score |
-- update score: player id - short 2 bytes | score - should be long 4 bytes |
- text is cached
- buffer cache has limit and purges items / look at optimizing and disposing buffer cache -> hook verts with an array of prims using them, prim dispose removes from array etc
- allow ents to have a property where they cannot be moved -> physics properties . static
- player's showing weapons / muzzle flashes on weapons etc
- run down players
- limited spawn protection e.g. cant die for 10s
- network interpolation
- sound effects
- lighting
- server chat (use html overlaying game)
- score system
- website:
   - scoreboard
   - optional registration
   - player customisation -> upload custom image for player
- deployment scripts / ansible

bugs:
- fix "kv of entities" syntax in project-sandbox; doesn't work with IE11 or minify
- remove old js
- #wrekt in big, wben player dies

future ideas / consider:
- change clientside logic from 60ms to 100ms to reduce computation
- moving tile types into json, which client can cache for a long time?
- update exact tiles/segments of map
- chunk map and cache, rather than send entire map
- textures allow limitless faces for frame, thus we could have pointed buildings if we add a type, which corresponds to a
  polygon (2d or 3d) -> make generic way to do it -> game loads in models, associated with type id/number
